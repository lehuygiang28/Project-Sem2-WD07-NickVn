// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Sem2_WD07_NickVn.Models;

#nullable disable

namespace Project_Sem2_WD07_NickVn.Migrations
{
    [DbContext(typeof(NickVn_ProjectContext))]
    partial class NickVn_ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("action")
                        .HasDefaultValueSql("'#'");

                    b.Property<string>("ImgSaleOff")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_sale_off");

                    b.Property<string>("ImgSrc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_src");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("Total")
                        .HasColumnType("int(11)")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.ChargeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<decimal>("MoneyReceived")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)")
                        .HasColumnName("money_received");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pin");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("result");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serial");

                    b.Property<string>("Telecom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telecom");

                    b.Property<string>("TypeCharge")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_charge");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("charge_history", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.Googlerecaptcha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("HostName")
                        .HasColumnType("text")
                        .HasColumnName("host_name");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secret_key");

                    b.Property<string>("SiteKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("site_key");

                    b.HasKey("Id");

                    b.ToTable("googlerecaptcha", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.Image", b =>
                {
                    b.Property<int>("ImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("img_id");

                    b.Property<string>("ImgLink")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_link");

                    b.Property<int>("LienminhId")
                        .HasColumnType("int(11)")
                        .HasColumnName("lienminh_id");

                    b.HasKey("ImgId")
                        .HasName("PRIMARY");

                    b.ToTable("images", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.Lienminh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("Champ")
                        .HasColumnType("int(11)")
                        .HasColumnName("champ");

                    b.Property<string>("ImgSrc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_src");

                    b.Property<string>("ImgThumb")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_thumb");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Note")
                        .HasColumnType("int(11)")
                        .HasColumnName("note");

                    b.Property<decimal>("PriceAtm")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("price_atm");

                    b.Property<string>("ProductUserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_user_name");

                    b.Property<string>("ProductUserPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_user_password");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("publisher");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rank");

                    b.Property<int>("Skin")
                        .HasColumnType("int(11)")
                        .HasColumnName("skin");

                    b.Property<int>("Sold")
                        .HasColumnType("int(11)")
                        .HasColumnName("sold");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("lienminh", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.Oder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<int>("OderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("oder_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("oders", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.ProductCategory", b =>
                {
                    b.Property<int>("IndexNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("index_no");

                    b.Property<string>("Action")
                        .HasColumnType("text")
                        .HasColumnName("action");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category_name");

                    b.Property<string>("ImgSrc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_src");

                    b.Property<int?>("Note")
                        .HasColumnType("int(11)")
                        .HasColumnName("note");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Total")
                        .HasColumnType("int(11)")
                        .HasColumnName("total");

                    b.HasKey("IndexNo")
                        .HasName("PRIMARY");

                    b.ToTable("product_category", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("role_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("role_name")
                        .HasDefaultValueSql("'Thành Viên'");

                    b.Property<string>("RoleNameEn")
                        .HasColumnType("text")
                        .HasColumnName("role_name_en");

                    b.HasKey("Id");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.TheNapDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<bool>("IsUse")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_use");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pin");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serial");

                    b.Property<string>("TelecomName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telecom_name");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.ToTable("the_nap_data", (string)null);
                });

            modelBuilder.Entity("Project_Sem2_WD07_NickVn.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("CoverImgSrc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cover_img_src");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("text")
                        .HasColumnName("img_src");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<decimal>("Money")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("money");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("role_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
