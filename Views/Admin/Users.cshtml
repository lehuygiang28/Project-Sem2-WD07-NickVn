@{
    ViewData["Title"] = "Users page";

    string vndFormat(dynamic money)
    {
        money = Convert.ToInt64(money);
        if (money == null)
        {
            return "0";
        }
        var info = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
        return String.Format(info, "{0:c0}", money);
    }

    var varlistUser = ViewBag.listUser;
    var varlistRole = ViewBag.listRole;
    var varListStatus = ViewBag.listStatus;

    List<User> listUser = (List<User>)varlistUser;
    List<Role> listRole = (List<Role>)varlistRole;
    List<Status> listStatus = (List<Status>)varListStatus;

}
<div class="container-fluid pt-4 px-4">

    <div class="bg-secondary rounded h-100 p-4">
        <div class="d-flex align-items-center justify-content-between mb-4">
            <h6 class="mb-4">Users Table</h6>
            <span class="text-danger">@TempData["err"]</span>
            <a class="btn btn-info float-end" asp-action="AddUser" asp-controller="Admin">Add User</a>
        </div>
        <div class="table-responsive">
            <table class="table table-stripedx mb-4" id="table">
                <thead>
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">User Name</th>
                        <th scope="col">Name</th>
                        <th scope="col">Phone</th>
                        <th scope="col">Money</th>
                        <th scope="col">Role</th>
                        <th scope="col">Status</th>
                        <th scope="col">Change Status</th>
                        <th scope="col">&nbsp;</th>
                        <th scope="col">&nbsp;</th>
                        <th scope="col">&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in listUser)
                    {
                        <tr>
                            <td scope="row">@item.Id</td>
                            <td scope="row">@item.UserName</td>
                            <td scope="row">@string.Format(item.LastName + " " + item.FirstName)</td>
                            <td scope="row">@item.Phone</td>
                            <td scope="row">@vndFormat(item.Money)</td>
                            <td scope="row">@{
                                    foreach (var r in listRole)
                                    {
                                        if (r.RoleId == item.RoleId)
                                        {
                                            @r.RoleNameEn
                                            break;
                                        }
                                    }
                                }
                            </td>
                            <td scope="row" id="status_name_@item.Id">
                                @foreach (var s in listStatus)
                                {
                                    if (item.StatusId == s.StatusId)
                                    {
                                        @s.StatusNameEn
                                    }

                                }
                            </td>
                            <td scope="row">
                                <select class="form-select" id="statusId" onchange="SubmitStatus(@item.Id)">

                                    <option value="">Change</option>

                                    @foreach (var s in listStatus)
                                    {
                                        if (s.StatusNameEn == "Ban" || s.StatusNameEn == "Active")
                                        {
                                            <option value="@s.StatusId">@s.StatusNameEn</option>
                                        }
                                    }
                                </select>

                                <script>
                                    async function SubmitStatus(user_id) {
                                        var statusId = $("#statusId").val();
                                        var urlSt = "/Admin/ChangeUserStatus?userId=" + user_id + "&statusId=" + statusId;
                                        var submit = $.post(urlSt);
                                    }
                                </script>
                            </td>
                            <td>@Html.ActionLink("Details", "DetailUser", new { id = item.Id }, new { @class =
                            "text-info"})</td>
                            <td>@Html.ActionLink("Edit", "EditUser", new { id = item.Id }, new { @class =
                            "text-light"})
                            </td>

                            <td>
                                <a type="button" class="text-danger" data-bs-toggle="modal"
                                data-bs-target="#DeleteCategoryPopup_@item.Id">
                                    Delete
                                </a>
                            </td>
                        </tr>

                        <!-- Modal -->
                        <div class="modal fade" id="DeleteCategoryPopup_@item.Id" tabindex="-1"
                        aria-labelledby="DeleteModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title text-secondary" id="DeleteModalLabel">Confirmation to
                                            delete?</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure to delete this Product?
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                        @Html.ActionLink("Confirm Delete", "DeleteUser", new { id = item.Id },
                                    new {
                                    @class = "btn btn-danger text-white"})
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </tbody>
            </table>
        </div>
        @* Pagination section: START *@
        <div class="d-flex justify-content-end">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @{
                        int currentPage = ViewBag.currentPage ?? 1;
                        int totalPage = ViewBag.totalPage ?? 1;
                        int spacePage = 2;
                        int nearLastPage = totalPage - 1;
                        int he_so = 2;

                        if (totalPage >= 1)
                        {
                            // Previous button, disable if is first page
                            if (currentPage == 1)
                            {
                                <li class="page-item disabled" aria-disabled="true" aria-label="&lsaquo; Previous">
                                    <span class="page-link" aria-hidden="true">&lsaquo;</span>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link" href='@Url.Action("Users", new {page = currentPage - 1 })'
                                aria-label="&laquo; Previous">&lsaquo;</a>
                                </li>
                            }

                            // Pages
                            // if total of page (less than) <
                            if (totalPage <= (spacePage * he_so) + 5)
                            {
                                for (int i = 1; i <= totalPage; i++)
                                {
                                    // Disable if is current page
                                    if (currentPage == i)
                                    {
                                        <li class="page-item active" aria-current="page">
                                            <span class="page-link">@i</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href='@Url.Action("Users", new {page = @i })'>@i</a>
                                        </li>
                                    }
                                }
                            }
                            else if (totalPage > (spacePage * he_so) + 5)
                            {
                                // In this case, current_page is too close to the beginning
                                if (currentPage < (spacePage + 3))
                                {
                                    // Beginning only hide later pages
                                    for (int i = 1; i <= totalPage - (spacePage + 3); i++)
                                    {
                                        // Disable if is current page
                                        if (currentPage == i)
                                        {
                                            <li class="page-item active" aria-current="page">
                                                <span class="page-link">@i</span>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href='@Url.Action("Users", new {page = @i })'>@i</a>
                                            </li>
                                        }
                                    }
                                    <li class="page-item disabled" aria-disabled="true"><span class="page-link">...</span></li>
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage - 1 })'>@nearLastPage</a></li>
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage })'>@totalPage</a></li>
                                }
                                else if (currentPage >= (spacePage + 3) && currentPage < totalPage - (spacePage * he_so))
                                {
                                    // Middle hide some front and some back
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage - totalPage + 1 })'>1</a></li>
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage - totalPage + 2 })'>2</a></li>
                                    <li class="page-item disabled" aria-disabled="true"><span class="page-link">...</span></li>

                                    for (int i = currentPage - spacePage; i <= currentPage + spacePage; i++)
                                    {
                                        // Disable if is current page
                                        if (currentPage == i)
                                        {
                                            <li class="page-item active" aria-current="page">
                                                <span class="page-link">@i</span>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href='@Url.Action("Users", new {page = @i })'>@i</a>
                                            </li>
                                        }
                                    }
                                    <li class="page-item disabled" aria-disabled="true"><span class="page-link">...</span></li>
                                    <li class="page-item"><a class="page-link"
                                href="@Url.Action("LienMinh", new {page = @totalPage - 1 })">@nearLastPage</a></li>
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage })'>@totalPage</a></li>
                                }
                                else
                                {
                                    // End only hide early pages
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage - totalPage + 1 })'>1</a></li>
                                    <li class="page-item"><a class="page-link"
                                href='@Url.Action("Users", new {page = @totalPage - totalPage + 2 })'>2</a></li>
                                    <li class="page-item disabled" aria-disabled="true"><span class="page-link">...</span></li>

                                    for (int i = totalPage - (spacePage * he_so); i <= totalPage; i++)
                                    {
                                        // Disable if is current page
                                        if (currentPage == i)
                                        {
                                            <li class="page-item active" aria-current="page">
                                                <span class="page-link">@i</span>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href='@Url.Action("Users", new {page = @i })'>@i</a>
                                            </li>
                                        }
                                    }
                                }
                            }

                            // Next button, disable if is last page
                            if (currentPage == totalPage)
                            {
                                <li class="page-item disabled" aria-disabled="true" aria-label="Next &rsaquo;">
                                    <span class="page-link" aria-hidden="false">&rsaquo;</span>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Users", new {page = currentPage + 1 })"
                                aria-label="Next &rsaquo;">&rsaquo;</a>
                                </li>
                            }
                        }
                    }
                </ul>
            </nav>
        </div>
        @* Pagination section: END *@

    </div>
</div>